<?xml version='1.0' encoding='utf-8'?><!-- -*- indent-tabs-mode: nil -*- -->

<xsl:stylesheet version="1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:msg="http://www.gnome.org/~shaunm/gnome-doc-utils/xsl-format"
                xmlns:_msg="http://www.gnome.org/~shaunm/gnome-doc-utils/xsl-format">

<title xmlns="http://www.gnome.org/~shaunm/xsldoc">Format Templates</title>


<!-- == format.citetitle =================================================== -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.citetitle</name>
  <purpose>
    Format a <xmltag>citetitle</xmltag> element
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The <xmltag>citetitle</xmltag> element to format
    </purpose>
  </parameter>
  <parameter>
    <name>role</name>
    <purpose>
      The role of the label
    </purpose>
  </parameter>
  <description>
    <para>This template used for formatting the <sgmltag>citetitle</sgmltag>
    element in DocBook.  The <sgmltag>citetitle</sgmltag> element has a
    <sgmltag class="attribute">pubwork</sgmltag> attribute that can be set
    to one of the following values:
    <literal>article</literal>,      <literal>bbs</literal>,
    <literal>book</literal>,         <literal>cdrom</literal>,
    <literal>chapter</literal>,      <literal>dvd</literal>,
    <literal>emailmessage</literal>, <literal>gopher</literal>,
    <literal>journal</literal>,      <literal>manuscript</literal>,
    <literal>newsposting</literal>,  <literal>part</literal>,
    <literal>refentry</literal>,     <literal>section</literal>,
    <literal>series</literal>,       <literal>set</literal>,
    <literal>webpage</literal>,      <literal>wiki</literal>.
    This template allows multiple role format strings, using the value of
    <sgmltag class="attribute">pubwork</sgmltag> as the role.  Translators
    can use this to customize the appearance of a cited title based on the
    type of document being cited.  The default formatting is as follows:</para>
    <programlisting><![CDATA[
<msg:msgstr role="article">“%t{node}”</msg:msgstr>
<msg:msgstr><i>%t{node}</i></msg:msgstr>]]></programlisting>
    <para>This puts the title of an article citation in quotes.  For all other
    types of works, the title is simply italicized.</para>
  </description>
</template>

<xsl:template name="format.citetitle">
  <xsl:param name="node" select="."/>
  <xsl:param name="role"/>
  <msg:msg id="format.citetitle">
    <_msg:msgstr>format.citetitle</_msg:msgstr>
    <msg:msgstr xml:lang="C">
      <msg:msgstr role="article">“%t{node}”</msg:msgstr>
      <msg:msgstr><i>%t{node}</i></msg:msgstr>
    </msg:msgstr>
  </msg:msg>
  <msg:arg name="node">
    <xsl:apply-templates select="$node/node()"/>
  </msg:arg>
</xsl:template>


<!-- == format.date ======================================================== -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.date</name>
  <purpose>
    Format a date
  </purpose>
  <parameter>
    <node>year</node>
    <purpose>
      The year in the Gregorian calendar
    </purpose>
  </parameter>
  <parameter>
    <name>month</name>
    <purpose>
      The number of the month
    </purpose>
  </parameter>
  <parameter>
    <name>day</name>
    <purpose>
      The number of the day in the month
    </purpose>
  </parameter>
</template>

<xsl:template name="format.date">
  <xsl:param name="year"/>
  <xsl:param name="month"/>
  <xsl:param name="day"/>
  <msg:msg id="format.date">
    <!-- FIXME -->
    <_msg:msgstr>format.date</_msg:msgstr>
    <msg:msgstr xml:lang="C">
      <xsl:template>
        <xsl:choose>
          <xsl:when test="$month =  1"><xsl:text>January </xsl:text></xsl:when>
          <xsl:when test="$month =  2"><xsl:text>February </xsl:text></xsl:when>
          <xsl:when test="$month =  3"><xsl:text>March </xsl:text></xsl:when>
          <xsl:when test="$month =  4"><xsl:text>April </xsl:text></xsl:when>
          <xsl:when test="$month =  5"><xsl:text>May </xsl:text></xsl:when>
          <xsl:when test="$month =  6"><xsl:text>June </xsl:text></xsl:when>
          <xsl:when test="$month =  7"><xsl:text>July </xsl:text></xsl:when>
          <xsl:when test="$month =  8"><xsl:text>August </xsl:text></xsl:when>
          <xsl:when test="$month =  9"><xsl:text>September </xsl:text></xsl:when>
          <xsl:when test="$month = 10"><xsl:text>October </xsl:text></xsl:when>
          <xsl:when test="$month = 11"><xsl:text>November </xsl:text></xsl:when>
          <xsl:when test="$month = 12"><xsl:text>December </xsl:text></xsl:when>
        </xsl:choose>
        <xsl:value-of select="$day"/>
        <xsl:text>, </xsl:text>
        <xsl:value-of select="$year"/>
      </xsl:template>
    </msg:msgstr>
  </msg:msg>
  <msg:arg name="year">
    <xsl:value-of select="$year"/>
  </msg:arg>
  <msg:arg name="month">
    <xsl:value-of select="$month"/>
  </msg:arg>
  <msg:arg name="day">
    <xsl:value-of select="$day"/>
  </msg:arg>
</xsl:template>


<!-- == format.quote.outer ================================================= -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.quote.outer</name>
  <purpose>
    Format a <xmltag>quote</xmltag> element
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The <xmltag>quote</xmltag> element to format
    </purpose>
  </parameter>
</template>

<xsl:template name="format.quote.outer">
  <xsl:param name="node" select="."/>
  <msg:msg id="format.quote.outer">
    <!-- “%t{node}” -->
    <_msg:msgstr>format.quote.outer</_msg:msgstr>
    <msg:msgstr xml:lang="C">“%t{node}”</msg:msgstr>
  </msg:msg>
  <msg:arg name="node">
    <xsl:apply-templates select="$node/node()"/>
  </msg:arg>
</xsl:template>


<!-- == format.quote.inner ================================================= -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.quote.inner</name>
  <purpose>
    Format a nested <xmltag>quote</xmltag> element
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The <xmltag>quote</xmltag> element to format
    </purpose>
  </parameter>
</template>

<xsl:template name="format.quote.inner">
  <xsl:param name="node" select="."/>
  <msg:msg id="format.quote.inner">
    <!-- ‘%t{node}’ -->
    <_msg:msgstr>format.quote.inner</_msg:msgstr>
    <msg:msgstr xml:lang="C">‘%t{node}’</msg:msgstr>
  </msg:msg>
  <msg:arg name="node">
    <xsl:apply-templates select="$node/node()"/>
  </msg:arg>
</xsl:template>


<!-- == format.appendix.label ============================================== -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.appendix.label</name>
  <purpose>
    Format the label for a <xmltag>appendix</xmltag> element
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The <xmltag>appendix</xmltag> element to format
    </purpose>
  </parameter>
  <parameter>
    <name>role</name>
    <purpose>
      The role of the label
    </purpose>
  </parameter>
</template>

<xsl:template name="format.appendix.label">
  <xsl:param name="node" select="."/>
  <xsl:param name="role"/>
  <msg:msg id="format.appendix.label">
    <!-- Appendix %t{number} -->
    <_msg:msgstr>format.appendix.label</_msg:msgstr>
    <msg:msgstr xml:lang="C">
      <msg:msgstr role="header">%t{number}.&#x2003;</msg:msgstr>
      <msg:msgstr role="li">%t{number}.&#x2002;</msg:msgstr>
      <msg:msgstr role="xref">Appendix %t{number} ― %t{title}</msg:msgstr>
      <msg:msgstr>Appendix %t{number}</msg:msgstr>
    </msg:msgstr>
  </msg:msg>
  <msg:arg name="number">
    <xsl:call-template name="db.label.number">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </msg:arg>
  <msg:arg name="title">
    <xsl:call-template name="db.title">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </msg:arg>
</xsl:template>


<!-- == format.chapter.label =============================================== -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.chapter.label</name>
  <purpose>
    Format the label for a <xmltag>chapter</xmltag> element
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The <xmltag>chapter</xmltag> element to format
    </purpose>
  </parameter>
  <parameter>
    <name>role</name>
    <purpose>
      The role of the label
    </purpose>
  </parameter>
</template>

<xsl:template name="format.chapter.label">
  <xsl:param name="node" select="."/>
  <xsl:param name="role"/>
  <msg:msg id="format.chapter.label">
    <!-- Chapter %t{number} -->
    <_msg:msgstr>format.chapter.label</_msg:msgstr>
    <msg:msgstr xml:lang="C">
      <msg:msgstr role="header">%t{number}.&#x2003;</msg:msgstr>
      <msg:msgstr role="li">%t{number}.&#x2002;</msg:msgstr>
      <msg:msgstr role="xref">Chapter %t{number} ― %t{title}</msg:msgstr>
      <msg:msgstr>Chapter %t{number}</msg:msgstr>
    </msg:msgstr>
  </msg:msg>
  <msg:arg name="number">
    <xsl:call-template name="db.label.number">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </msg:arg>
  <msg:arg name="title">
    <xsl:call-template name="db.title">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </msg:arg>
</xsl:template>


<!-- == format.example.label =============================================== -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.example.label</name>
  <purpose>
    Format the label for a <xmltag>example</xmltag> element
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The <xmltag>example</xmltag> element to format
    </purpose>
  </parameter>
  <parameter>
    <name>role</name>
    <purpose>
      The role of the label
    </purpose>
  </parameter>
</template>

<xsl:template name="format.example.label">
  <xsl:param name="node" select="."/>
  <xsl:param name="role"/>
  <msg:msg id="format.example.label">
    <!-- Example %t{number} -->
    <_msg:msgstr>format.example.label</_msg:msgstr>
    <msg:msgstr xml:lang="C">
      <msg:msgstr role="header"><i>Example %t{number}</i>&#x2003;</msg:msgstr>
      <msg:msgstr>Example %t{number}</msg:msgstr>
    </msg:msgstr>
  </msg:msg>
  <msg:arg name="number">
    <xsl:call-template name="db.label.number">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </msg:arg>
  <msg:arg name="title">
    <xsl:call-template name="db.title">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </msg:arg>
</xsl:template>


<!-- == format.figure.label ================================================ -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.figure.label</name>
  <purpose>
    Format the label for a <xmltag>figure</xmltag> element
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The <xmltag>figure</xmltag> element to format
    </purpose>
  </parameter>
  <parameter>
    <name>role</name>
    <purpose>
      The role of the label
    </purpose>
  </parameter>
</template>

<xsl:template name="format.figure.label">
  <xsl:param name="node" select="."/>
  <xsl:param name="role"/>
  <msg:msg id="format.figure.label">
    <!-- Figure %t{number} -->
    <_msg:msgstr>format.figure.label</_msg:msgstr>
    <msg:msgstr xml:lang="C">
      <msg:msgstr role="header"><i>Figure %t{number}</i>&#x2003;</msg:msgstr>
      <msg:msgstr>Figure %t{number}</msg:msgstr>
    </msg:msgstr>
  </msg:msg>
  <msg:arg name="number">
    <xsl:call-template name="db.label.number">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </msg:arg>
  <msg:arg name="title">
    <xsl:call-template name="db.title">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </msg:arg>
</xsl:template>


<!-- == format.manvolnum =================================================== -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.manvolnum</name>
  <purpose>
    Format a <xmltag>manvolnum</xmltag> element
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The <xmltag>manvolnum</xmltag> element to format
    </purpose>
  </parameter>
</template>

<xsl:template name="format.manvolnum">
  <xsl:param name="node" select="."/>
  <msg:msg id="format.manvolnum">
    <!-- (%t{node}) -->
    <_msg:msgstr>format.manvolnum</_msg:msgstr>
    <msg:msgstr xml:lang="C">(%t{node})</msg:msgstr>
  </msg:msg>
  <msg:arg name="node">
    <xsl:apply-templates select="$node/node()"/>
  </msg:arg>
</xsl:template>


<!-- == format.part.label ================================================== -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.part.label</name>
  <purpose>
    Format the label for a <xmltag>part</xmltag> element
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The <xmltag>part</xmltag> element to format
    </purpose>
  </parameter>
  <parameter>
    <name>role</name>
    <purpose>
      The role of the label
    </purpose>
  </parameter>
</template>

<xsl:template name="format.part.label">
  <xsl:param name="node" select="."/>
  <xsl:param name="role"/>
  <msg:msg id="format.chapter.label">
    <!-- Part %t{number} -->
    <_msg:msgstr>format.part.label</_msg:msgstr>
    <msg:msgstr xml:lang="C">
      <msg:msgstr role="header">%t{number}.&#x2003;</msg:msgstr>
      <msg:msgstr role="li">%t{number}.&#x2002;</msg:msgstr>
      <msg:msgstr role="xref">Part %t{number} ― %t{title}</msg:msgstr>
      <msg:msgstr>Part %t{number}</msg:msgstr>
    </msg:msgstr>
  </msg:msg>
  <msg:arg name="number">
    <xsl:call-template name="db.label.number">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </msg:arg>
  <msg:arg name="title">
    <xsl:call-template name="db.title">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </msg:arg>
</xsl:template>


<!-- == format.refentry.label ============================================== -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.refentry.label</name>
  <purpose>
    Format the label for a <xmltag>refentry</xmltag> element
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The <xmltag>refentry</xmltag> element to format
    </purpose>
  </parameter>
  <parameter>
    <name>role</name>
    <purpose>
      The role of the label
    </purpose>
  </parameter>
</template>

<xsl:template name="format.refentry.label">
  <xsl:param name="node" select="."/>
  <xsl:param name="role"/>
  <msg:msg id="format.chapter.label">
    <!-- %t{title} -->
    <_msg:msgstr>format.refentry.label</_msg:msgstr>
    <msg:msgstr xml:lang="C">
      <msg:msgstr role="xref">%t{title}</msg:msgstr>
      <msg:msgstr>%t{title}</msg:msgstr>
    </msg:msgstr>
  </msg:msg>
  <msg:arg name="title">
    <xsl:call-template name="db.title">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </msg:arg>
</xsl:template>


<!-- == format.section.label =============================================== -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.section.label</name>
  <purpose>
    Format the label for a <xmltag>section</xmltag> element
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The <xmltag>section</xmltag> element to format
    </purpose>
  </parameter>
  <parameter>
    <name>role</name>
    <purpose>
      The role of the label
    </purpose>
  </parameter>
</template>

<xsl:template name="format.section.label">
  <xsl:param name="node" select="."/>
  <xsl:param name="role"/>
  <msg:msg id="format.section.label">
    <!-- Section %t{number} -->
    <_msg:msgstr>format.section.label</_msg:msgstr>
    <msg:msgstr xml:lang="C">
      <msg:msgstr role="header">%t{number}.&#x2003;</msg:msgstr>
      <msg:msgstr role="li">%t{number}.&#x2002;</msg:msgstr>
      <msg:msgstr role="xref">Section %t{number} ― %t{title}</msg:msgstr>
      <msg:msgstr>Section %t{number}</msg:msgstr>
    </msg:msgstr>
  </msg:msg>
  <msg:arg name="number">
    <xsl:call-template name="db.label.number">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </msg:arg>
  <msg:arg name="title">
    <xsl:call-template name="db.title">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </msg:arg>
</xsl:template>


<!-- == format.table.label ================================================= -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.table.label</name>
  <purpose>
    Format the label for a <xmltag>table</xmltag> element
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The <xmltag>table</xmltag> element to format
    </purpose>
  </parameter>
  <parameter>
    <name>role</name>
    <purpose>
      The role of the label
    </purpose>
  </parameter>
</template>

<xsl:template name="format.table.label">
  <xsl:param name="node" select="."/>
  <xsl:param name="role"/>
  <msg:msg id="format.table.label">
    <!-- Table %t{number} -->
    <_msg:msgstr>format.table.label</_msg:msgstr>
    <msg:msgstr xml:lang="C">
      <msg:msgstr role="header"><i>Table %t{number}</i>&#x2003;</msg:msgstr>
      <msg:msgstr>Table %t{number}</msg:msgstr>
    </msg:msgstr>
  </msg:msg>
  <msg:arg name="number">
    <xsl:call-template name="db.label.number">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </msg:arg>
  <msg:arg name="title">
    <xsl:call-template name="db.title">
      <xsl:with-param name="node" select="$node"/>
    </xsl:call-template>
  </msg:arg>
</xsl:template>


<!-- == format.example.number ============================================== -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.example.number</name>
  <purpose>
    Format the number for a <xmltag>example</xmltag> element
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The element for which to generate a number
    </purpose>
  </parameter>
</template>

<xsl:template name="format.example.number">
  <xsl:param name="node" select="."/>
  <msg:msg id="format.example.number">
    <!-- %t{parent}-%1{number} -->
    <_msg:msgstr>format.example.number</_msg:msgstr>
    <msg:msgstr xml:lang="C">%t{parent}-%1{number}</msg:msgstr>
  </msg:msg>
  <msg:arg name="parent">
    <xsl:call-template name="db.label.number">
      <xsl:with-param name="node" select="
                      $node/ancestor::appendix |
                      $node/ancestor::chapter  "/>
    </xsl:call-template>
  </msg:arg>
  <msg:arg name="number">
    <xsl:number level="any" count="example" from="chapter | appendix"/>
  </msg:arg>
</xsl:template>


<!-- == format.example.number.flat ========================================= -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.example.number.flat</name>
  <purpose>
    Format the number for a <xmltag>example</xmltag> element in a flat document
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The element for which to generate a number
    </purpose>
  </parameter>
</template>

<xsl:template name="format.example.number.flat">
  <xsl:param name="node" select="."/>
  <msg:msg id="format.example.number.flat">
    <!-- %1{number} -->
    <_msg:msgstr>format.example.number.flat</_msg:msgstr>
    <msg:msgstr xml:lang="C">%1{number}</msg:msgstr>
  </msg:msg>
  <msg:arg name="number">
    <xsl:number level="any" count="example" from="chapter | appendix"/>
  </msg:arg>
</xsl:template>


<!-- == format.figure.number =============================================== -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.figure.number</name>
  <purpose>
    Format the number for a <xmltag>figure</xmltag> element
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The element for which to generate a number
    </purpose>
  </parameter>
</template>

<xsl:template name="format.figure.number">
  <xsl:param name="node" select="."/>
  <msg:msg id="format.figure.number">
    <!-- %t{parent}-%1{number} -->
    <_msg:msgstr>format.figure.number</_msg:msgstr>
    <msg:msgstr xml:lang="C">%t{parent}-%1{number}</msg:msgstr>
  </msg:msg>
  <msg:arg name="parent">
    <xsl:call-template name="db.label.number">
      <xsl:with-param name="node" select="
                      $node/ancestor::appendix |
                      $node/ancestor::chapter  "/>
    </xsl:call-template>
  </msg:arg>
  <msg:arg name="number">
    <xsl:number level="any" count="figure" from="chapter | appendix"/>
  </msg:arg>
</xsl:template>


<!-- == format.figure.number.flat ========================================== -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.figure.number.flat</name>
  <purpose>
    Format the number for a <xmltag>figure</xmltag> element in a flat document
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The element for which to generate a number
    </purpose>
  </parameter>
</template>

<xsl:template name="format.figure.number.flat">
  <xsl:param name="node" select="."/>
  <msg:msg id="format.figure.number.flat">
    <!-- %1{number} -->
    <_msg:msgstr>format.figure.number.flat</_msg:msgstr>
    <msg:msgstr xml:lang="C">%1{number}</msg:msgstr>
  </msg:msg>
  <msg:arg name="number">
    <xsl:number level="any" count="figure" from="chapter | appendix"/>
  </msg:arg>
</xsl:template>


<!-- == format.part.number ================================================= -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.part.number</name>
  <purpose>
    Format the number for a <xmltag>part</xmltag> element
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The element for which to generate a number
    </purpose>
  </parameter>
</template>

<xsl:template name="format.part.number">
  <xsl:param name="node" select="."/>
  <msg:msg id="format.figure.number.flat">
    <!-- %I{number} -->
    <_msg:msgstr>format.part.number</_msg:msgstr>
    <msg:msgstr xml:lang="C">%I{number}</msg:msgstr>
  </msg:msg>
  <msg:arg name="number">
    <xsl:number value="count($node/preceding-sibling::part) + 1"/>
  </msg:arg>
</xsl:template>


<!-- == format.table.number ================================================ -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.table.number</name>
  <purpose>
    Format the number for a <xmltag>table</xmltag> element
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The element for which to generate a number
    </purpose>
  </parameter>
</template>

<xsl:template name="format.table.number">
  <xsl:param name="node" select="."/>
  <msg:msg id="format.table.number">
    <!-- %t{parent}-%1{number} -->
    <_msg:msgstr>format.table.number</_msg:msgstr>
    <msg:msgstr xml:lang="C">%t{parent}-%1{number}</msg:msgstr>
  </msg:msg>
  <msg:arg name="parent">
    <xsl:call-template name="db.label.number">
      <xsl:with-param name="node" select="
                      $node/ancestor::appendix |
                      $node/ancestor::chapter  "/>
    </xsl:call-template>
  </msg:arg>
  <msg:arg name="number">
    <xsl:number level="any" count="table" from="chapter | appendix"/>
  </msg:arg>
</xsl:template>


<!-- == format.table.number.flat =========================================== -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.table.number.flat</name>
  <purpose>
    Format the number for a <xmltag>table</xmltag> element in a flat document
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The element for which to generate a number
    </purpose>
  </parameter>
</template>

<xsl:template name="format.table.number.flat">
  <xsl:param name="node" select="."/>
  <msg:msg id="format.table.number.flat">
    <!-- %1{number} -->
    <_msg:msgstr>format.table.number.flat</_msg:msgstr>
    <msg:msgstr xml:lang="C">%1{number}</msg:msgstr>
  </msg:msg>
  <msg:arg name="number">
    <xsl:number level="any" count="table" from="chapter | appendix"/>
  </msg:arg>
</xsl:template>


<!-- == format.tooltip.glossentry ========================================== -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.tooltip.glossentry</name>
  <purpose>
    Format the tooltip for a link to a <xmltag>glossentry</xmltag>
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The <xmltag>glossentry</xmltag> element
    </purpose>
  </parameter>
</template>

<xsl:template name="format.tooltip.glossentry">
  <xsl:param name="node" select="."/>
  <msg:msg id="format.tooltip.glossentry">
    <!-- Read the definition for ‘%s{node}’ -->
    <_msg:msgstr>format.tooltip.glossentry</_msg:msgstr>
    <msg:msgstr xml:lang="C">Read the definition for ‘%s{node}’</msg:msgstr>
  </msg:msg>
  <msg:arg name="node">
    <xsl:value-of select="normalize-space($node/glossterm)"/>
  </msg:arg>
</xsl:template>


<!-- == format.tooltip.mailto ============================================== -->

<template xmlns="http://www.gnome.org/~shaunm/xsldoc">
  <name>format.tooltip.mailto</name>
  <purpose>
    Format the tooltip for a link to a
    <systemitem role="protocol">mailto</systemitem> URI.
  </purpose>
  <parameter>
    <name>node</name>
    <purpose>
      The source node
    </purpose>
  </parameter>
  <parameter>
    <name>address</name>
    <purpose>
      The email address
    </purpose>
  </parameter>
</template>

<xsl:template name="format.tooltip.mailto">
  <xsl:param name="node"/>
  <xsl:param name="address"/>
  <msg:msg id="format.tooltip.mailto">
    <!-- Send email to ‘%s{address}’ -->
    <_msg:msgstr>format.tooltip.mailto</_msg:msgstr>
    <msg:msgstr xml:lang="C">Send email to ‘%s{address}’</msg:msgstr>
  </msg:msg>
  <msg:arg name="address">
    <xsl:value-of select="normalize-space($address)"/>
  </msg:arg>
</xsl:template>

</xsl:stylesheet>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [
<!ENTITY gettext_xsl "<filename>gettext.xsl</filename>">
<!ENTITY format2xsl_xsl "<filename>format2xsl.xsl</filename>">
<!ENTITY l10n_xml "<filename>l10n.xml</filename>">
<!ENTITY gettext
  "<function role='xsl-template' moreinfo='refentry'>gettext</function>">
<!ENTITY format2xsl
  "<function role='xsl-template' moreinfo='refentry'>format2xsl</function>">
]>

<section id="translating">
  <title>Translating the Stylesheets</title>
  <para>The GNOME documentation stylesheets use two different mechanisms for
  internationalization.  The simpler method is provided by &gettext_xsl;.
  This method reads in translated strings from a simple &l10n_xml; file, which
  is easily managed using PO files and <command>intltool</command>.  The other
  method is provided by &format2xsl_xsl;.  This method converts special format
  files to XSLT stylesheets at build time.  It is considerably more flexible
  than the &gettext_xsl; method, as it allows translators programmer-level
  control over the formatted output.</para>

  <para>Generally, &gettext; is used only for simple string lookups that require
  no special formatting.  However, since it tends to have better performance
  than &format2xsl;, it is preferred whenever possible.  If you are providing
  translations and find that a string marked for translation is insufficient
  for your locale, you should request to have that translation reworked using
  format strings.  Document processing is a much more difficult task for
  internationalization than most simple application translations in GNOME.
  The maintainers don't know all the nuances of document processing in every
  language, so the only way we can improve the internationalization support is
  with the help of the translators.</para>

  <section id="translating-gettext">
    <title>The &gettext; Method</title>
    <para>The GNOME documentation stylesheets provide an XSLT template called
    &gettext; which extracts localized values of strings from a localization
    file.  This file is easily translated with PO files using the XML mode of
    <command>intltool</command>.</para>
    <para>For instance, consider the string <wordasword>Caution</wordasword>,
    which is used as a heading for <sgmltag>caution</sgmltag> elements.  The
    stylesheets would call &gettext; to extract the translated value of this
    string for the document's language.  The &l10n_xml; file would have an
    entry similar to this:</para>
    <programlisting><![CDATA[
<msg xmlns=""http://www.gnome.org/~shaunm/gnome-doc-utils/xsl-format">
  <msgid>Caution</msgid>
  <msgstr>Caution</msgstr>
  <msgstr xml:lang="ca">Compte</msgstr>
  <msgstr xml:lang="cs">Upozornění</msgstr>
  <msgstr xml:lang="de">Warnung</msgstr>
  <msgstr xml:lang="en_CA">Caution</msgstr>
  <msgstr xml:lang="en_GB">Caution</msgstr>
  <msgstr xml:lang="es">Precaución</msgstr>
  <msgstr xml:lang="hu">Figyelem</msgstr>
  <msgstr xml:lang="nl">Let op</msgstr>
  <msgstr xml:lang="pt">Cuidado</msgstr>
  <msgstr xml:lang="pt_BR">Cuidado</msgstr>
  <msgstr xml:lang="sq">Kujdes</msgstr>
  <msgstr xml:lang="sv">Varning</msgstr>
  <msgstr xml:lang="uk">Застереження</msgstr>
  <msgstr xml:lang="wa">Adviertance</msgstr>
</msg>
    ]]></programlisting>
    <para>A translator, however, will work only with the PO files.  Using
    PO files for these strings is no different than any other simple string
    translation.  The PO entry in the <literal>de</literal> locale for the
    above string would look like this:</para>
    <programlisting>
#: xslt/gettext/l10n.xml.in.h:25
msgid "Caution"
msgstr "Warnung"
    </programlisting>
  </section>

  <section id="translating-format2xsl">
    <title>The &format2xsl; Method</title>
    <para/>
  </section>
</section>

<page xmlns="http://www.gnome.org/~shaunm/mallard"
      type="topic"
      id="mal_block_code">

<info>
  <link type="guide" xref="mal_block#simple"/>
  <link type="seealso" xref="mal_inline_code"/>

  <credit type="author">
    <name>Shaun McCance</name>
    <email>shaunm@gnome.org</email>
  </credit>
  <copyright>
    <year>2008</year>
    <name>Shaun McCance</name>
  </copyright>

  <version number="0.1" date="2007-02-21" status="stub"/>
</info>

<title>Code Blocks</title>

<synopsis><code mime="application/relax-ng-compact-syntax">
mal_block_code = element code {
  attribute style { xsd:NMTOKENS } ?,
  attribute mime { text } ?,
  attribute * - (mal:* | local:*) { text } *,

  <link xref="mal_inline">mal_inline</link>
}
</code></synopsis>

<comment>
  <cite date="2006-12-08"><name>Shaun McCance</name></cite>
  <p>Add intro material.</p>
</comment>


<!-- BEGIN examples -->
<section id="examples">
  <title>Examples</title>
  <comment>
    <cite date="2007-01-25"><name>Shaun McCance</name></cite>
    <p>Add examples.</p>
  </comment>
</section>
<!-- END examples -->


<!-- BEGIN processing -->
<section id="processing">
  <title>Processing Expectations</title>
  <comment>
    <cite date="2007-01-25"><name>Shaun McCance</name></cite>
    <p>Add processing expectations.  For block, strip leading/trailing
    newline.  Do not strip leading indentation.</p>
  </comment>
  <p>display tools should strip a leading newline and a trailing newline
  from the text content.  This allows people to write XML like the following:</p>
  <code>
&lt;code&gt;
def frobnicate (foo, bar):
    if foo:
        bar
    else:
        foo + bar
&lt;/code&gt;
</code>
  <p>This is much more natural to read and write, since every line is on its
  own without markup.  Display tools should strip no more than one newline
  from either end, in case authors need to insert intentional newlines.  If
  the first or last child is an element, display tools should not descend
  into those elements to strip newlines.</p>
  <p>Display tools should not attempt to strip uniform indentation from
  the text contents.  Authors sometimes indent preformatted text to match
  the indentation of the surrounding markup.  Handling this reliably is
  difficult and can lead to unexpected results.  Authors should fix their
  documents if this problem arises.</p>
</section>
<!-- END processing -->


<!-- BEGIN docbook -->
<section id="docbook">
  <title>Comparison to DocBook</title>
  <p>DocBook contains numerous elements for modeling code in procedural and
  object-oriented programming languages.  Many of these elements can be seen
  by browsing the content models for the
  <code href="http://www.docbook.org/tdg/en/html/classsynopsis.html">classsynopsis</code>
  and
  <code href="http://www.docbook.org/tdg/en/html/funcsynopsis.html">funcsynopsis</code>
  elements.  Mallard does not attempt to model any programming languages.</p>



  <comment>
    <cite date="2007-01-25"><name>Shaun McCance</name></cite>
    <p>Add: code, class*, func*, programlisting</p>
  </comment>
</section>
<!-- END docbook -->

</page>

<?xml version='1.0' encoding='utf-8'?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0"
	 xmlns:ref="http://www.gnome.org/~shaunm/mallard/reference">

  <ref:title>DB Module for Lists</ref:title>

  <!-- Stub Content Models -->

  <div ref:role="stub">
    <ref:title>Stub Content Models</ref:title>

    <define name="db-list.stub.attr-common">
      <ref:refname>db-list.stub.attr-common</ref:refname>
      <ref:refpurpose>
	A stub model for common attributes.
      </ref:refpurpose>
      <notAllowed/>
    </define>

    <define name="db-list.stub.block-optional">
      <ref:refname>db-list.stub.block-optional</ref:refname>
      <ref:refpurpose>
	A stub model for optional block-level content.
      </ref:refpurpose>
      <notAllowed/>
    </define>

    <define name="db-list.stub.inline">
      <ref:refname>db-list.stub.inline</ref:refname>
      <ref:refpurpose>
	A stub model for optional inline content.
      </ref:refpurpose>
      <notAllowed/>
    </define>

    <define name="db-list.stub.title-optional">
      <ref:refname>db-list.stub.title-optional</ref:refname>
      <ref:refpurpose>
	A stub model for optional title elements.
      </ref:refpurpose>
      <notAllowed/>
    </define>
  </div>

  <!-- Element Classes -->

  <div ref:role="choice">
    <ref:title>Element Classes</ref:title>

    <define name="db-list.choice.list">
      <ref:refname>db-list.choice.list</ref:refname>
      <ref:refpurpose>
	A <ref:xmltag>choice</ref:xmltag> containing the block-level list
	elements defined by this module.
      </ref:refpurpose>

      <choice>
	<ref name="db-list.element.itemizedlist"/>
	<ref name="db-list.element.orderedlist"/>
	<ref name="db-list.element.segmentedlist"/>
	<ref name="db-list.element.simplelist"/>
	<ref name="db-list.element.variablelist"/>
      </choice>
    </define>
  </div>

  <!-- Element Definitions -->

  <div ref:role="element">
    <ref:title>Element Definitions</ref:title>

    <define name="db-list.element.itemizedlist">
      <element name="itemizedlist">
	<ref:refname>itemizedlist</ref:refname>
	<ref:refpurpose>
	  A list in which each element is marked with a bullet.
	</ref:refpurpose>

	<ref name="db-list.stub.attr-common"/>
	<ref name="db-list.stub.title-optional"/>
	<ref name="db-list.stub.block-optional"/>
	<oneOrMore>
	  <ref name="db-list.element.listitem"/>
	</oneOrMore>
      </element>
    </define>

    <define name="db-list.element.listitem">
      <element name="listitem">
	<ref:refname>listitem</ref:refname>
	<ref:refpurpose>
	  An element of a list.
	</ref:refpurpose>

	<ref name="db-list.stub.attr-common"/>
	<ref name="db-list.stub.block-optional"/>
      </element>
    </define>

    <define name="db-list.element.member">
      <element name="member">
	<ref:refname>member</ref:refname>
	<ref:refpurpose>
	  An element of a simple list.
	</ref:refpurpose>

	<ref name="db-list.stub.attr-common"/>
	<ref name="db-list.stub.inline"/>
      </element>
    </define>

    <define name="db-list.element.orderedlist">
      <element name="orderedlist">
	<ref:refname>orderedlist</ref:refname>
	<ref:refpurpose>
	  A list where each element is sequentially numbered.
	</ref:refpurpose>

	<ref name="db-list.stub.attr-common"/>
	<ref name="db-list.stub.title-optional"/>
	<ref name="db-list.stub.block-optional"/>
	<oneOrMore>
	  <ref name="db-list.element.listitem"/>
	</oneOrMore>
      </element>
    </define>

    <define name="db-list.element.seg">
      <element name="seg">
	<ref:refname>seg</ref:refname>
	<ref:refpurpose>
	  An element of a list item in a segmented list.
	</ref:refpurpose>

	<ref name="db-list.stub.attr-common"/>
	<ref name="db-list.stub.inline"/>
      </element>
    </define>

    <define name="db-list.element.seglistitem">
      <element name="seglistitem">
	<ref:refname>seglistitem</ref:refname>
	<ref:refpurpose>
	  A list item in a segmented list.
	</ref:refpurpose>

	<ref name="db-list.stub.attr-common"/>
	<oneOrMore>
	  <ref name="db-list.element.seg"/>
	</oneOrMore>
      </element>
    </define>

    <define name="db-list.element.segmentedlist">
      <element name="segmentedlist">
	<ref:refname>segmentedlist</ref:refname>
	<ref:refpurpose>
	  A list of sets of elements.
	</ref:refpurpose>

	<ref name="db-list.stub.attr-common"/>
	<ref name="db-list.stub.title-optional"/>
	<oneOrMore>
	  <ref name="db-list.element.segtitle"/>
	</oneOrMore>
	<oneOrMore>
	  <ref name="db-list.element.seglistitem"/>
	</oneOrMore>
      </element>
    </define>

    <define name="db-list.element.segtitle">
      <element name="segtitle">
	<ref:refname>segtitle</ref:refname>
	<ref:refpurpose>
	  A list item in a segmented list.
	</ref:refpurpose>

	<ref name="db-list.stub.attr-common"/>
	<ref name="db-list.stub.inline"/>
      </element>
    </define>

    <define name="db-list.element.simplelist">
      <element name="simplelist">
	<ref:refname>simplelist</ref:refname>
	<ref:refpurpose>
	  A list of words or phrases.
	</ref:refpurpose>

	<ref name="db-list.stub.attr-common"/>
	<choice>
	  <attribute name="type">
	    <value type="string">inline</value>
	  </attribute>
	  <group>
	    <attribute name="columns">
	      <text/>
	    </attribute>
	    <optional>
	      <attribute name="type">
		<choice>
		  <value type="string">horiz</value>
		  <value type="string">vert</value>
		</choice>
	      </attribute>
	    </optional>
	  </group>
	</choice>
	<oneOrMore>
	  <ref name="db-list.element.member"/>
	</oneOrMore>
      </element>
    </define>

    <define name="db-list.element.term">
      <element name="term">
	<ref:refname>term</ref:refname>
	<ref:refpurpose>
	  The word or phrase being defined in a variable list.
	</ref:refpurpose>

	<ref name="db-list.stub.attr-common"/>
	<ref name="db-list.stub.inline"/>
      </element>
    </define>

    <define name="db-list.element.variablelist">
      <element name="variablelist">
	<ref:refname>variablelist</ref:refname>
	<ref:refpurpose>
	  A list in which each entry is composed of a set of one or more terms
	  and an associated description.
	</ref:refpurpose>

	<ref name="db-list.stub.attr-common"/>
	<ref name="db-list.stub.title-optional"/>
	<ref name="db-list.stub.block-optional"/>
	<oneOrMore>
	  <ref name="db-list.element.varlistentry"/>
	</oneOrMore>
      </element>
    </define>

    <define name="db-list.element.varlistentry">
      <element name="varlistentry">
	<ref:refname>varlistentry</ref:refname>
	<ref:refpurpose>
	  A wrapper for a set of terms and associated descriptions in a
	  variable list.
	</ref:refpurpose>

	<ref name="db-list.stub.attr-common"/>
	<oneOrMore>
	  <ref name="db-list.element.term"/>
	</oneOrMore>
	<ref name="db-list.element.listitem"/>
      </element>
    </define>

  </div>
</grammar>

<page xmlns="http://www.gnome.org/~shaunm/mallard"
      type="topic"
      id="mal_inline_output">

<info>
  <link type="guide" xref="mal_inline#elements"/>

  <credit type="author">
    <name>Shaun McCance</name>
    <email>shaunm@gnome.org</email>
  </credit>
  <copyright>
    <year>2008</year>
    <name>Shaun McCance</name>
  </copyright>

  <version number="0.1" date="2008-12-16" status="incomplete"/>

  <desc>Mark up the output from a computer program.</desc>
</info>

<title>Computer Output</title>

<synopsis><code mime="application/relax-ng-compact-syntax">
mal_inline_output = element output {
  <link xref="mal_attr_link">mal_attr_link</link> ?,
  attribute style { xsd:NMTOKENS } ?,
  attribute * - (mal:* | local:*) { text } *,

  <link xref="mal_inline">mal_inline</link>
}
</code></synopsis>

<comment><cite date="2008-12-16"><name>shaunm</name></cite>
<p>This is marked incomplete because the example with screen is
not yet rendered correctly.  The content is finished.</p></comment>

<p>Use the <code>output</code> element to mark up text that is output
by a computer program.  Typically, this is text output in a command-line
environment, although you may use the <code>output</code> element for
computer-generated text in a text box or similar control in a graphical
application.  For messages and other labels in a graphical applicaiton,
use the <code xref="mal_inline_gui">gui</code> element.</p>

<p>You can use the <code>style</code> attribute to indicate what type of text
is being marked up.  Inside a <code xref="mal_block_screen">screen</code>
element, this may be used to format normal text, error text, and prompts
differently.</p>


<!-- BEGIN notes -->
<section id="notes">
  <title>Notes</title>
  <list type="bullet">
    <item><p>The <code>style</code> attribute takes a space-separated list of
    style hints.  Processing tools should adjust their behavior according to
    those style hints they understand.</p></item>

    <item>
      <p>Typical values for the <code>style</code> attribute include:</p>
      <table><tr>
        <td><p><code>output</code></p></td>
        <td><p>Standard output from a running program</p></td>
      </tr><tr>
        <td><p><code>error</code></p></td>
        <td><p>Standard error from a running program</p></td>
      </tr><tr>
        <td><p><code>prompt</code></p></td>
        <td><p>The command prompt for an interactive shell</p></td>
      </tr></table>
    </item>

    <item><p>The <code>output</code> element, together with the
    <code xref="mal_inline_input">input</code> element, may be used to mark up
    the contents of a <code xref="mal_block_screen">screen</code> element,
    allowing processing tools to treat them differently.</p></item>

    <item><p>The <code>output</code> element can link to other pages or documents.
    See <link xref="mal_attr_link"/> for more information.</p></item>

    <item><p>The <code>output</code> element can have attributes from external
    namespaces.  See <link xref="mal_attr_external"/> for more information
    on external-namespace attributes on inline elements.</p></item>
  </list>
</section>
<!-- END notes -->


<!-- BEGIN examples -->
<section id="examples">
  <title>Examples</title>

  <p>Use <code>ouptut</code> to mark up text generated by a program:</p>

  <example>
    <code><![CDATA[
The output of <cmd>echo $SHELL</cmd> is <output>/bin/bash</output>
if you use the Bourne-again shell.
]]></code>
    <p>The output of <cmd>echo $SHELL</cmd> is <output>/bin/bash</output> if
    you use the Bourne-again shell.</p>
  </example>

  <p>Use <code>output</code> and <code xref="mal_inline_input">input</code>
  inside a <code xref="mal_block_screen">screen</code> element:</p>

  <example>
    <code><![CDATA[
<screen>
<output style="prompt">$ </output><input>ls mal_inline_output.xml</input>
<output>mal_inline_output.xml</output>
</screen>
]]></code>
<screen>
<output style="prompt">$ </output><input>ls mal_inline_output.xml</input>
<output>mal_inline_output.xml</output>
</screen>
  </example>

  <p>Use <code>output</code> for error text:</p>

  <example>
    <code><![CDATA[
<screen>
<output style="prompt">$ </output><input>ls mal.xml</input>
<output style="error">ls: mal.xml: No such file or directory</output>
</screen>
]]></code>
<screen>
<output style="prompt">$ </output><input>ls mal_inline_computeroutput.xml</input>
<output style="error">ls: mal_inline_computerouput.xml: No such file or directory</output>
</screen>
  </example>
</section>
<!-- END examples -->


<!-- BEGIN processing -->
<section id="processing">
  <title>Processing Expectations</title>

  <p>Computer output should be displayed in a fixed-width or wide font.
  Fixed-width fonts tend to have more distinction between visually similar
  characters.  Display tools may use a background color or border to
  make the beginning and end of the ouptut clear.</p>
</section>


<!-- BEGIN docbook -->
<section id="docbook">
  <title>Comparison to DocBook</title>
  <p>The <code>output</code> element is similar to the
  <code href="http://www.docbook.org/tdg/en/html/computeroutput.html">computeroutput</code>
  element in DocBook.  When necessary, the <code>output</code> element may be used
  with the <code>style</code> attribute <code>"prompt"</code> in place of DocBook's
  <code href="http://www.docbook.org/tdg/en/html/prompt.html">prompt</code>
  element.  In some cases, it may be appropriate to use the <code>output</code>
  element with the <code>style</code> attribute <code>"error"</code> in place
  of DocBook's
  <code href="http://www.docbook.org/tdg/en/html/errorname.html">errorname</code> and
  <code href="http://www.docbook.org/tdg/en/html/errortext.html">errortext</code>
  elements.</p>
</section>
<!-- END docbook -->

</page>
